Index: app/account/tests.py
===================================================================
diff --git a/app/account/tests.py b/app/account/tests.py
deleted file mode 100644
--- a/app/account/tests.py	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ /dev/null	(revision 3637a617df340fba82bd90980f667650e4efc539)
@@ -1,3 +0,0 @@
-from django.test import TestCase
-
-# Create your tests here.
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6906d687-5245-4363-bb1a-37163bc15c9d\" name=\"Default Changelist\" comment=\"Fixed tests director app\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/director/tests/test_views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/director/tests/test_views.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1sw8sYEna1Etgwm6wvv9lEuSSdi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../3 курс/Программирование численных методов/лаб 13 Метод простых итераций\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Работа\\Проект\\app\\templates\\user\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Работа\\Проект\\app\\templates\" />\r\n      <recent name=\"D:\\Работа\\Проект\\app\\templates\\user\\tasks\" />\r\n      <recent name=\"D:\\Работа\\Проект\\app\\templates\\user\\main\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"test_views\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Проект\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/app/director/tests\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/app/director/tests/test_views.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.test_views\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6906d687-5245-4363-bb1a-37163bc15c9d\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1621772498950</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1621772498950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Added tasks\">\r\n      <created>1621773329643</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621773329643</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changed the Task model. Added the CreateTask form. File created create-task.html\">\r\n      <created>1621845004071</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621845004071</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Changed settings\">\r\n      <created>1621847638432</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621847638432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added the director app\">\r\n      <created>1621849350725</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621849350725</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Added the index view to the director app\">\r\n      <created>1621850960800</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621850960800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Rename authorization to account\">\r\n      <created>1621856893580</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621856893580</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Implemented HEAD_TRACK-001, HEAD_TRACK-002, HEAD_TRACK-003\">\r\n      <created>1621939867920</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1621939867920</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Implemented HEAD_TRACK-004\">\r\n      <created>1622185602273</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622185602273</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Added create_task, edit_task, delete_task\">\r\n      <created>1622196674520</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622196674520</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Implemented USER_TRACK-007\">\r\n      <created>1622274841169</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622274841169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Optimization user app\">\r\n      <created>1622393297736</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622393297736</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Optimization director app\">\r\n      <created>1622397786960</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622397786960</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Optimization account app\">\r\n      <created>1622399339127</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622399339127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added logging\">\r\n      <created>1622458504398</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622458504398</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added tests director app\">\r\n      <created>1622553994923</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622553994923</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Added tests director app\">\r\n      <created>1622554005884</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622554005885</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Fixed tests director app\">\r\n      <created>1622614792008</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622614792008</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Added tasks\" />\r\n    <MESSAGE value=\"Changed the Task model. Added the CreateTask form. File created create-task.html\" />\r\n    <MESSAGE value=\"Changed settings\" />\r\n    <MESSAGE value=\"Added the director app\" />\r\n    <MESSAGE value=\"Added the index view to the director app\" />\r\n    <MESSAGE value=\"Rename authorization to account\" />\r\n    <MESSAGE value=\"Implemented HEAD_TRACK-001, HEAD_TRACK-002, HEAD_TRACK-003\" />\r\n    <MESSAGE value=\"Implemented HEAD_TRACK-004\" />\r\n    <MESSAGE value=\"Added create_task, edit_task, delete_task\" />\r\n    <MESSAGE value=\"Implemented USER_TRACK-007\" />\r\n    <MESSAGE value=\"Optimization user app\" />\r\n    <MESSAGE value=\"Optimization director app\" />\r\n    <MESSAGE value=\"Optimization account app\" />\r\n    <MESSAGE value=\"Added logging\" />\r\n    <MESSAGE value=\"Added tests director app\" />\r\n    <MESSAGE value=\"Fixed tests director app\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixed tests director app\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ b/.idea/workspace.xml	(date 1622628300898)
@@ -1,9 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="6906d687-5245-4363-bb1a-37163bc15c9d" name="Default Changelist" comment="Fixed tests director app">
+    <list default="true" id="6906d687-5245-4363-bb1a-37163bc15c9d" name="Default Changelist" comment="Added tests user app">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/director/tests/test_views.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/director/tests/test_views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/account/forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/account/forms.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/account/tests.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/account/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/account/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/templates/user/tasks/list_tasks.html" beforeDir="false" afterPath="$PROJECT_DIR$/app/templates/user/tasks/list_tasks.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/user/tests/test_views.py" beforeDir="false" afterPath="$PROJECT_DIR$/app/user/tests/test_views.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -206,7 +210,14 @@
       <option name="project" value="LOCAL" />
       <updated>1622614792008</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <task id="LOCAL-00018" summary="Added tests user app">
+      <created>1622621684738</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1622621684738</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -238,6 +249,7 @@
     <MESSAGE value="Added logging" />
     <MESSAGE value="Added tests director app" />
     <MESSAGE value="Fixed tests director app" />
-    <option name="LAST_COMMIT_MESSAGE" value="Fixed tests director app" />
+    <MESSAGE value="Added tests user app" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added tests user app" />
   </component>
 </project>
\ No newline at end of file
Index: app/templates/user/tasks/list_tasks.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% load static %}\r\n{% block title %}The list tasks{% endblock title %}\r\n{% block head %}\r\n    <link rel=\"stylesheet\" href=\"{% static 'css/user/tasks/base.css' %}\" type=\"text/css\"/>\r\n    <link rel=\"stylesheet\" href=\"{% static 'css/user/tasks/placing_buttons_together.css' %}\" type=\"text/css\"/>\r\n{% endblock head %}\r\n{% block content %}\r\n    <ul>\r\n        {% for task in tasks %}\r\n            <li>\r\n                <a href=\"#\">\r\n                    <p>Project: {{ task.project.name }}</p>\r\n                    <p>Date: {{ task.date }}</p>\r\n                    <p>Description: {{ task.description }}</p>\r\n                    <p>Worked time: {{ task.time_worked }}</p>\r\n                    {% block optional_task %}{% endblock optional_task %}\r\n                </a>\r\n            </li>\r\n        {% endfor %}\r\n        {% block last_element %}{% endblock last_element %}\r\n    </ul>\r\n{% endblock content %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/templates/user/tasks/list_tasks.html b/app/templates/user/tasks/list_tasks.html
--- a/app/templates/user/tasks/list_tasks.html	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ b/app/templates/user/tasks/list_tasks.html	(date 1622622558199)
@@ -20,4 +20,7 @@
         {% endfor %}
         {% block last_element %}{% endblock last_element %}
     </ul>
+    <form action="{% url 'user-page' %}">
+        <button style="font-size: 15px;">Back</button>
+    </form>
 {% endblock content %}
\ No newline at end of file
Index: app/account/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth.decorators import login_required\r\nfrom django.shortcuts import render, redirect\r\nfrom django.contrib.auth import authenticate, login as impl_login, logout as impl_logout\r\nfrom django.contrib import messages\r\nfrom django.core.exceptions import ObjectDoesNotExist\r\nfrom account.forms import LoginForm, RegisterForm\r\nfrom administrator.models import UnregisteredUser\r\nfrom user.models import User\r\nfrom main.views import decorator_adds_user_information_log\r\n\r\n\r\ndef login(request):\r\n    \"\"\"Вход пользователя в систему\"\"\"\r\n    if request.method == \"POST\":\r\n        form = LoginForm(request.POST)\r\n        if form.is_valid():\r\n            user = authenticate(email=form.cleaned_data[\"email\"], password=form.cleaned_data[\"password\"])\r\n            if user is not None:\r\n                impl_login(request, user)\r\n                if user.role == 3:\r\n                    return redirect(\"user-page\")\r\n                elif user.role == 2:\r\n                    return redirect(\"director-page\")\r\n                else:\r\n                    return redirect(\"administrator-page\")\r\n            else:\r\n                messages.error(request, \"Invalid email or password.\")\r\n        else:\r\n            messages.error(request, \"Invalid email or password.\")\r\n    return render(request, \"base_form.html\", context={\r\n        \"form\": LoginForm(),\r\n        \"title\": \"Log in\",\r\n        \"button_name\": \"Log In\"\r\n    })\r\n\r\n\r\n@login_required\r\n@decorator_adds_user_information_log\r\ndef logout(request):\r\n    \"\"\"Выход пользователя из системы\"\"\"\r\n    impl_logout(request)\r\n    return redirect(login)\r\n\r\n\r\ndef registration(request):\r\n    \"\"\"Регистрация пользователя\"\"\"\r\n    if request.method == \"POST\":\r\n        form = RegisterForm(request.POST)\r\n        if form.is_valid():\r\n            code = form.cleaned_data[\"code\"]\r\n\r\n            try:\r\n                unreg_user = UnregisteredUser.objects.get(code=code)\r\n            except ObjectDoesNotExist:\r\n                messages.error(request, \"invalid access key\")\r\n                return render(request, \"account/registration.html\", context={\"form\": form})\r\n\r\n            user = User()\r\n            user.first_name = unreg_user.first_name\r\n            user.last_name = unreg_user.last_name\r\n            user.email = unreg_user.email\r\n            user.department = unreg_user.department\r\n            user.post = unreg_user.post\r\n            user.role = unreg_user.role\r\n            user.set_password(form.cleaned_data[\"password\"])\r\n            user.save()\r\n            unreg_user.delete()\r\n            return redirect(\"/accounts/login\")\r\n    else:\r\n        form = RegisterForm()\r\n    return render(request, \"base_form.html\", context={\r\n        \"form\": form,\r\n        \"title\": \"Registration\",\r\n        \"button_name\": \"Register\"\r\n    })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/account/views.py b/app/account/views.py
--- a/app/account/views.py	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ b/app/account/views.py	(date 1622628300533)
@@ -53,7 +53,11 @@
                 unreg_user = UnregisteredUser.objects.get(code=code)
             except ObjectDoesNotExist:
                 messages.error(request, "invalid access key")
-                return render(request, "account/registration.html", context={"form": form})
+                return render(request, "base_form.html", context={
+                    "form": form,
+                    "title": "Registration",
+                    "button_name": "Register"
+                })
 
             user = User()
             user.first_name = unreg_user.first_name
Index: app/user/tests/test_views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.test import TestCase\r\nfrom django.utils import timezone\r\nfrom django.urls import reverse\r\nfrom user.models import User, Department, Company, Project, Task\r\nfrom datetime import date\r\n\r\n\r\nclass ViewsTestCase(TestCase):\r\n\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        cls.company = Company.objects.create(name=\"Abc\")\r\n        cls.department = Department.objects.create(name=\"abc\", company=cls.company)\r\n        cls.project = Project.objects.create(name=\"abc\", company=cls.company)\r\n        cls.test_user1 = User.objects.create(password=\"\", email=\"abc@mail.ru\", role=3, is_superuser=True,\r\n                                               first_name=\"abc\", last_name=\"abc\", is_staff=1, is_active=1,\r\n                                               date_joined=timezone.now(), post=\"user\", department=cls.department)\r\n        cls.test_user1.department.project.add(cls.project)\r\n        cls.test_user1.set_password(\"12345\")\r\n        cls.test_user1.save()\r\n        cls.test_user2 = User.objects.create(password=\"\", email=\"def@mail.ru\", role=2, is_superuser=True,\r\n                                               first_name=\"abc\", last_name=\"abc\", is_staff=1, is_active=1,\r\n                                               date_joined=timezone.now(), post=\"user\", department=cls.department)\r\n        cls.task1 = Task.objects.create(date=date.today(), time_worked=120, description=\"abc\", project=cls.project,\r\n                                        user=cls.test_user1)\r\n        cls.task2 = Task.objects.create(date=date.today(), time_worked=100, description=\"def\", project=cls.project,\r\n                                        user=cls.test_user2)\r\n\r\n    @classmethod\r\n    def tearDownClass(cls):\r\n        cls.test_user1.department.project.clear()\r\n        for elem in [cls.task1, cls.task2, cls.project, cls.test_user1, cls.test_user2, cls.department, cls.company]:\r\n            elem.delete()\r\n\r\n    def test_check_access_index_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"user-page\"))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'user/main/index.html')\r\n\r\n    def test_check_context_template_index_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"user-page\"))\r\n        today = date.today()\r\n        self.assertEqual(resp.context[\"today\"], today)\r\n        self.assertEqual(resp.context[\"current_year\"], today.year)\r\n        self.assertEqual(resp.context[\"current_month\"], today.month)\r\n\r\n    def test_1_check_access_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"list-tasks\", args=[2021, 5, 20]))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'user/tasks/index.html')\r\n\r\n    def test_2_check_access_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"list-tasks\", args=[2001, 5, 20]))\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_check_context_template_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        today = date.today()\r\n        resp = self.client.get(reverse(\"list-tasks\", args=[today.year, today.month, today.day]))\r\n        tasks = resp.context[\"tasks\"]\r\n        self.assertEqual(resp.context[\"date\"], today)\r\n        self.assertIn(self.task1, tasks)\r\n        self.assertNotIn(self.task2, tasks)\r\n\r\n    def test_check_access_change_password_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"change-password\"))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_1_post_request_change_password_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"change-password\"), data={\r\n            \"old_password\": \"12345\",\r\n            \"password\": \"abc\",\r\n            \"password2\": \"abc\"\r\n        })\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_2_post_request_change_password_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"change-password\"), data={\r\n            \"old_password\": \"12345\",\r\n            \"password\": \"abc\",\r\n            \"password2\": \"def\"\r\n        })\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_check_access_change_data_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"change-data\"))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_1_post_request_change_data_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"change-data\"), data={\r\n            \"email\": \"vsh@mail.ru\",\r\n            \"last_name\": \"vsh\",\r\n            \"first_name\": \"vsh\"\r\n        })\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, reverse(\"user-page\"))\r\n\r\n    def test_2_post_request_change_data_user_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"change-data\"), data={\r\n            \"email\": \"abc@mail.ru\",\r\n            \"last_name\": \"vsh\",\r\n            \"first_name\": \"vsh\"\r\n        })\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_1_check_access_create_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"create-task\", args=[2021, 5, 20]))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_2_check_access_create_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"create-task\", args=[2001, 5, 20]))\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_1_post_request_create_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"create-task\", args=[2021, 5, 20]), data={\r\n            \"project\": [f\"{self.project.id}\"],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, reverse(\"list-tasks\", args=[2021, 5, 20]))\r\n\r\n    def test_2_post_request_create_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"create-task\", args=[2021, 5, 20]), data={\r\n            \"project\": [],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_3_post_request_create_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"create-task\", args=[2001, 5, 20]), data={\r\n            \"project\": [f\"{self.project.id}\"],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_1_check_access_edit_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"edit-task\", args=[self.task1.id]))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_2_check_access_edit_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"edit-task\", args=[self.task2.id]))\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_1_post_request_edit_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"edit-task\", args=[self.task1.id]), data={\r\n            \"project\": [f\"{self.project.id}\"],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, reverse(\"list-tasks\", args=[self.task1.date.year, self.task1.date.month,\r\n                                                               self.task1.date.day]))\r\n\r\n    def test_2_post_request_edit_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"edit-task\", args=[self.task2.id]), data={\r\n            \"project\": [f\"{self.project.id}\"],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_3_post_request_edit_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.post(reverse(\"edit-task\", args=[self.task1.id]), data={\r\n            \"project\": [],\r\n            \"time_worked\": [\"140\"],\r\n            \"description\": [\"add\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, 'form.html')\r\n\r\n    def test_1_check_access_delete_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"delete-task\", args=[self.task1.id]))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, reverse(\"list-tasks\", args=[self.task1.date.year, self.task1.date.month,\r\n                                                               self.task1.date.day]))\r\n\r\n    def test_2_check_access_delete_task_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"delete-task\", args=[self.task2.id]))\r\n        self.assertEqual(resp.status_code, 404)\r\n\r\n    def test_check_access_select_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        resp = self.client.get(reverse(\"select-tasks\"))\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, \"selection_form.html\")\r\n\r\n    def test_1_post_request_select_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        today = date.today()\r\n        resp = self.client.post(reverse(\"select-tasks\"), data={\r\n            \"start_date\": [\"31/05/2021\"],\r\n            \"end_date\": [f\"{today.day}/{today.month}/{today.year}\"],\r\n        })\r\n        tasks = resp.context[\"tasks\"]\r\n        self.assertIn(self.task1, tasks)\r\n        self.assertNotIn(self.task2, tasks)\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, \"user/tasks/list_tasks.html\")\r\n\r\n    def test_2_post_request_select_tasks_view(self):\r\n        self.client.force_login(self.test_user1)\r\n        today = date.today()\r\n        resp = self.client.post(reverse(\"select-tasks\"), data={\r\n            \"start_date\": [f\"{today.day + 1}/{today.month}/{today.year}\"],\r\n            \"end_date\": [f\"{today.day}/{today.month}/{today.year}\"],\r\n        })\r\n        self.assertEqual(resp.status_code, 200)\r\n        self.assertTemplateUsed(resp, \"selection_form.html\")\r\n\r\n    def test_checks_access_with_different_role_index_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"user-page\"))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_tasks_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"list-tasks\", args=[2021, 5, 20]))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_change_password_user_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"change-password\"))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_change_data_user_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"change-data\"))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_create_task_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"create-task\", args=[2021, 5, 20]))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_edit_task_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"edit-task\", args=[self.task1.id]))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_delete_task_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"delete-task\", args=[self.task1.id]))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")\r\n\r\n    def test_checks_access_with_different_role_select_tasks_view(self):\r\n        self.client.force_login(self.test_user2)\r\n        resp = self.client.get(reverse(\"select-tasks\"))\r\n        self.assertEqual(resp.status_code, 302)\r\n        self.assertEqual(resp.url, \"/accounts/login\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/user/tests/test_views.py b/app/user/tests/test_views.py
--- a/app/user/tests/test_views.py	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ b/app/user/tests/test_views.py	(date 1622624365634)
@@ -36,7 +36,7 @@
         self.client.force_login(self.test_user1)
         resp = self.client.get(reverse("user-page"))
         self.assertEqual(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'user/main/index.html')
+        self.assertTemplateUsed(resp, "user/main/index.html")
 
     def test_check_context_template_index_view(self):
         self.client.force_login(self.test_user1)
@@ -50,7 +50,7 @@
         self.client.force_login(self.test_user1)
         resp = self.client.get(reverse("list-tasks", args=[2021, 5, 20]))
         self.assertEqual(resp.status_code, 200)
-        self.assertTemplateUsed(resp, 'user/tasks/index.html')
+        self.assertTemplateUsed(resp, "user/tasks/index.html")
 
     def test_2_check_access_tasks_view(self):
         self.client.force_login(self.test_user1)
Index: app/account/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.forms import Form, EmailField, PasswordInput, CharField, ValidationError\r\n\r\n\r\nclass LoginForm(Form):\r\n    \"\"\"Форма входа\"\"\"\r\n    email = EmailField()\r\n    password = CharField(widget=PasswordInput)\r\n\r\n\r\nclass RegisterForm(Form):\r\n    \"\"\"Форма регистрации\"\"\"\r\n    password = CharField(label=\"password\", widget=PasswordInput)\r\n    password2 = CharField(label=\"repeat password\", widget=PasswordInput)\r\n    code = CharField(label=\"access code\")\r\n\r\n    def clean_password2(self):\r\n        cd = self.cleaned_data\r\n        if cd['password'] != cd['password2']:\r\n            raise ValidationError(\"passwords don't match\")\r\n        return cd['password2']\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/account/forms.py b/app/account/forms.py
--- a/app/account/forms.py	(revision 3637a617df340fba82bd90980f667650e4efc539)
+++ b/app/account/forms.py	(date 1622626432880)
@@ -9,8 +9,8 @@
 
 class RegisterForm(Form):
     """Форма регистрации"""
-    password = CharField(label="password", widget=PasswordInput)
-    password2 = CharField(label="repeat password", widget=PasswordInput)
+    password = CharField(label="password", min_length=8, widget=PasswordInput)
+    password2 = CharField(label="repeat password", min_length=8, widget=PasswordInput)
     code = CharField(label="access code")
 
     def clean_password2(self):
